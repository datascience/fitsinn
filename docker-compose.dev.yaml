version: '3'

services:

  fits:
    build:
      context: .
      dockerfile: ./fits/Dockerfile
    container_name: fits
    env_file: .env
    networks:
      - web
    restart: unless-stopped
    ports:
      - 8081:8080

  rest:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file: .env
    networks:
      - web
    restart: unless-stopped
    deploy:
      replicas: 2
    depends_on:
      - fits
      - db-docker

  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile.dev
    container_name: web
    env_file: .env
    networks:
      - web
    restart: unless-stopped
    ports:
      - 8080:3000

  db-docker:
    image: mysql:8.0
    container_name: db-docker
    env_file: .env
    environment:
      MYSQL_DATABASE: fitsinn
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: pass
    networks:
      - web
    restart: unless-stopped
    ports:
      - 3306:3306

  adminer:
    image: adminer
    container_name: adminer
    env_file: .env
    restart: unless-stopped
    networks:
      - web
    ports:
      - 8090:8080

  nginx:
    image: nginx
    container_name: nginx
    env_file: .env
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8082:80
    networks:
      - web
    depends_on:
      - rest

networks:
  web: